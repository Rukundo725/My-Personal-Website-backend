{"version":3,"sources":["../src/index.js"],"names":["app","port","process","env","PORT","mongoose","connection","once","console","log","listen","swaggerDefinition","openapi","info","title","version","servers","url","description","options","apis","swaggerSpec","use","express","json","bodyParser","authRoute","blogRoute","swaggerUi","serve","setup"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAGA,IAAMA,GAAG,GAAG,0BAAZ;AACA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAmB,IAAhC,C,CAEA;;AACA;;AACAC,qBAASC,UAAT,CAAoBC,IAApB,CAAyB,MAAzB,EAAiC,YAAM;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAT,EAAAA,GAAG,CAACU,MAAJ,CAAYT,IAAZ,EAAkB;AAAA,WAAMO,OAAO,CAACC,GAAR,kCAAsCR,IAAtC,EAAN;AAAA,GAAlB;AACH,CAHD,E,CAOA;;;AACA,IAAMU,iBAAiB,GAAG;AACtBC,EAAAA,OAAO,EAAE,OADa;AAEtBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,kCADH;AAEJC,IAAAA,OAAO,EAAE;AAFL,GAFgB;AAMtBC,EAAAA,OAAO,EAAE,CACP;AACEC,IAAAA,GAAG,EAAE,uBADP;AAEEC,IAAAA,WAAW,EAAE;AAFf,GADO;AANa,CAA1B;AAcE,IAAMC,OAAO,GAAG;AACdR,EAAAA,iBAAiB,EAAjBA,iBADc;AAEd;AACAS,EAAAA,IAAI,EAAE,CAAC,mBAAD;AAHQ,CAAhB;AAOA,IAAMC,WAAW,GAAG,8BAAaF,OAAb,CAApB,C,CAEF;;AACAnB,GAAG,CAACsB,GAAJ,CAAQ,uBAAR;AACAtB,GAAG,CAACsB,GAAJ,CAAQC,oBAAQC,IAAR,EAAR;AACAxB,GAAG,CAACsB,GAAJ,CAAQG,uBAAWD,IAAX,EAAR;AACAxB,GAAG,CAACsB,GAAJ,CAAQ,WAAR,EAAqBI,gBAArB;AACA1B,GAAG,CAACsB,GAAJ,CAAQ,WAAR,EAAqBK,gBAArB;AACA3B,GAAG,CAACsB,GAAJ,CAAQ,OAAR,EAAiBM,6BAAUC,KAA3B,EAAkCD,6BAAUE,KAAV,CAAgBT,WAAhB,CAAlC;eAEerB,G","sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\nimport mongoose from 'mongoose';\nimport authRoute from \"./Routers/Auth\";\nimport connectDb from './dbConn';\nimport blogRoute from \"./Routers/blog\";\nimport cors from \"cors\";\nimport swaggerJSDoc from \"swagger-jsdoc\";\nimport swaggerUi from \"swagger-ui-express\";\n\n\nconst app = express();\nconst port = process.env.PORT ||4000;\n\n// Connect to MongoDB\nconnectDb();\nmongoose.connection.once('open', () => {\n    console.log('Connected to MongoDB');\n    app.listen( port, () => console.log(`Server running on port ${port}`));\n});\n\n\n\n//swagger definition\nconst swaggerDefinition = {\n    openapi: \"3.0.0\",\n    info: {\n      title: \"Express API for My Blog Articles\",\n      version: \"1.0.0\",\n    },\n    servers: [\n      {\n        url: \"http://localhost:4000\",\n        description: \"Development server\",\n      },\n    ],\n  };\n   \n  const options = {\n    swaggerDefinition,\n    // Paths to files containing OpenAPI definitions\n    apis: [\"./Routers/blog.js\"],\n    \n  };\n  \n  const swaggerSpec = swaggerJSDoc(options);\n\n// middleware \napp.use(cors());\napp.use(express.json());\napp.use(bodyParser.json());\napp.use('/api/user', authRoute);\napp.use('/api/blog', blogRoute);\napp.use(\"/docs\", swaggerUi.serve, swaggerUi.setup(swaggerSpec));\n\nexport default app;\n\n"],"file":"index.js"}